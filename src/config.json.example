// Dynamic values
// ==============
//
// {{time}}  will be replaces with seconds since 1.1.1970
//

{
  "rssi[0].name": "PLAYER1",
  "rssi[0].freq": 5658,
  "rssi[0].peak": 1100,
  "rssi[0].filter": 60,
  "rssi[0].offset_enter": 80,
  "rssi[0].offset_leave": 70,
  "rssi[0].calib_max_lap_count": 3,
  "rssi[0].calib_min_rssi_peak": 600,
  "rssi[0].led_color": 14876421,
  "rssi[1].name": "red",
  "rssi[1].freq": 0,
  "rssi[1].peak": 999,
  "rssi[1].filter": 66,
  "rssi[1].offset_enter": 88,
  "rssi[1].offset_leave": 77,
  "rssi[1].calib_max_lap_count": 3,
  "rssi[1].calib_min_rssi_peak": 666,
  "rssi[1].led_color": 16711680,
  "rssi[2].name": "PLAYER2",
  "rssi[2].freq": 0,
  "rssi[2].peak": 999,
  "rssi[2].filter": 66,
  "rssi[2].offset_enter": 88,
  "rssi[2].offset_leave": 77,
  "rssi[2].calib_max_lap_count": 3,
  "rssi[2].calib_min_rssi_peak": 666,
  "rssi[2].led_color": 255,
  "rssi[3].name": "Blue",
  "rssi[3].freq": 0,
  "rssi[3].peak": 900,
  "rssi[3].filter": 60,
  "rssi[3].offset_enter": 80,
  "rssi[3].offset_leave": 70,
  "rssi[3].calib_max_lap_count": 3,
  "rssi[3].calib_min_rssi_peak": 600,
  "rssi[3].led_color": 255,
  "rssi[4].name": "",
  "rssi[4].freq": 0,
  "rssi[4].peak": 900,
  "rssi[4].filter": 60,
  "rssi[4].offset_enter": 80,
  "rssi[4].offset_leave": 70,
  "rssi[4].calib_max_lap_count": 3,
  "rssi[4].calib_min_rssi_peak": 600,
  "rssi[4].led_color": 255,
  "rssi[5].name": "",
  "rssi[5].freq": 0,
  "rssi[5].peak": 900,
  "rssi[5].filter": 60,
  "rssi[5].offset_enter": 80,
  "rssi[5].offset_leave": 70,
  "rssi[5].calib_max_lap_count": 3,
  "rssi[5].calib_min_rssi_peak": 600,
  "rssi[5].led_color": 255,
  "rssi[6].name": "",
  "rssi[6].freq": 0,
  "rssi[6].peak": 900,
  "rssi[6].filter": 60,
  "rssi[6].offset_enter": 80,
  "rssi[6].offset_leave": 70,
  "rssi[6].calib_max_lap_count": 3,
  "rssi[6].calib_min_rssi_peak": 600,
  "rssi[6].led_color": 255,
  "rssi[7].name": "",
  "rssi[7].freq": 0,
  "rssi[7].peak": 900,
  "rssi[7].filter": 60,
  "rssi[7].offset_enter": 80,
  "rssi[7].offset_leave": 70,
  "rssi[7].calib_max_lap_count": 3,
  "rssi[7].calib_min_rssi_peak": 600,
  "rssi[7].led_color": 255,

  // ELRS/OSD settings
  "elrs_uid": "0,0,0,0,0,0",
  // X and Y position of the string
  "osd_x": 0,
  "osd_y": 0,
  // The OSD string printf like format specifier
  //   %L   The current number of labs
  //   %tms Time of current lab in milliseconds
  //   %ts  Time of current lab in seconds
  //   %tm  Time of current lab in seconds
  //   %dms Delta to last lab in milliseconds
  //   %ds  Delta to last lab in seconds
  //   %dm  Delta to last lab in minutes
  // Default give a format like " 2: 20.66 (+    2.02)"
  "osd_format": "%2L: %5.2ts(%6.2ds)",

  // WIFI settings
  // wifi_mode is the operation mode
  //   0=AP (AccessPoint with captive portal and DHCP-Server)
  //   1=STA (use DHCP to request an IP)
  "wifi_mode": 0,
  "ssid": "simple-fpv-timer-00",
  // if the passphrase is empty, an OPEN wifi is used
  "passphrase": "",


  // Node settings
  // node_name is used to identify the node on the controller
  "node_name": "esp32-{{time}}",

  // The node_mode specify in which mode this node is running.
  //   0=Controller (other esp's can connect to it)
  //   1=Client (use ctrl_ipv4/cltr_port to connect to the controller)
  "node_mode": 0,
  "ctrl_ipv4": "192.168.2.1",
  "ctrl_port": 9090,

  // The game mode specify the operation mode (should match with the controller)
  //   0=RACE
  //   1=CTF
  //   2=SPECTRUM
  "game_mode": 0,

  // Number of led's on the LED-Stribe which is connected
  "led_num": 25
}
